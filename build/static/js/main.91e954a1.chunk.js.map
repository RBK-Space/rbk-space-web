{"version":3,"sources":["components/Navbar/Navbar.js","actions/types.js","actions/posts.js","components/AddPost/AddPost.js","components/Post/Post.tsx","components/userProfile/Profile.js","components/Search/SearchPeople.js","components/Search/SearchPosts.js","components/EditProfile/Tab1.js","components/EditProfile/Tab2.js","components/EditProfile/Tab3.js","components/EditProfile/EditProfile.js","reducers/posts.js","reducers/index.js","components/HomePage/Header.jsx","components/HomePage/Homepage.jsx","App.js","serviceWorker.ts","index.tsx"],"names":["Header","Layout","Navbar","props","_handleLogoutClick","window","open","handleNotAuthenticated","state","user","error","authenticated","searchToggle","searchWord","searchResult","toggleClick","bind","handleChange","e","value","target","this","setState","that","fetch","method","credentials","headers","Accept","then","response","status","json","Error","responseJson","catch","className","to","src","alt","theme","mode","style","lineHeight","Item","key","type","name","onChange","Group","defaultValue","userId","image","id","onClick","React","Component","GET_ALL_POSTS","ADD_POST","getAllPosts","dispatch","axios","get","payload","data","Promise","reject","TextArea","Input","TabPane","Tabs","AddPost","text","pictures","onDrop","handleInputChange","handlePostTextClick","handlePostImageClick","console","log","addPost","postType","postBody","pictureFiles","pictureDataURLs","concat","uploadPhotosPromises","map","FormData","append","Math","random","post","all","values","err","defaultActiveKey","callback","tab","withIcon","buttonText","imgExtension","maxFileSize","withPreview","length","message","success","mapDispatchToProps","connect","posts","allPostsReducer","Post","componentDidMount","a","async","dots","document","getElementById","moreText","btnText","display","innerHTML","index","imgUrl","fullName","date","createdAt","substring","split","splice","join","postId","event","myFunction","library","add","fas","faFacebookF","faTwitter","faLinkedin","faGithub","Profile","getData","match","params","result","loggedInUser","Panel","Collapse","customPanelStyle","background","borderRadius","marginBottom","border","overflow","hasOwnProperty","icon","faUserEdit","color","size","gh","href","rel","fb","li","tw","cohort","empStat","bio","skills","skill","skillName","bordered","expandIcon","isActive","rotate","projects","project","header","projectTitle","projectDesc","projectLink","SearchPeople","query","URLSearchParams","location","search","peopleSearchResult","postsSearchResult","Option","Select","Tab1","cohorts","empStatus","handleSubmit","preventDefault","form","validateFieldsAndScroll","openMessage","skillId","confirmDirty","autoCompleteResult","cohortNo","loading","content","setTimeout","duration","getFieldDecorator","labelCol","xs","span","sm","wrapperCol","onSubmit","label","title","initialValue","rules","required","whitespace","handleCohortChange","width","cohortId","cohortName","shape","placeholder","handleSkillsChange","handleEmpStatusChange","empId","offset","htmlType","BasicInfoForm","Form","create","Tab2","handleSubmitLinks","facebook","github","twitter","linkedin","SocialLinks","Tab3","handleSubmitProjects","description","link","rows","resetFields","Portfolio","EditProfile","EditProfileForm","initialState","combineReducers","action","_handleSignInClick","HomePage","_handleNotAuthenticated","store","createStore","applyMiddleware","thunk","App","path","exact","component","SearchPosts","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gfAKQA,G,OAAWC,IAAXD,QAwJOE,E,YArJb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAmBRC,mBAAqB,WAGnBC,OAAOC,KAAK,8CAA+C,SAC3D,EAAKH,MAAMI,0BArBX,EAAKC,MAAQ,CACXC,KAAM,GACNC,MAAO,KACPC,eAAe,EACfC,aAAc,EACdC,WAAY,GACZC,aAAc,IAEhB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAZH,E,yEAePE,GAAI,IACNC,EAAUD,EAAEE,OAAZD,MACRE,KAAKC,SAAS,CAAEV,aAAcO,M,0CAW9B,IAAII,EAAOF,KAEXG,MAAM,qDAAsD,CAC1DC,OAAQ,MACRC,YAAa,UACbC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB,oCAAoC,KAGrCC,MAAK,SAAAC,GACJ,GAAwB,MAApBA,EAASC,OAAgB,OAAOD,EAASE,OAC7C,MAAM,IAAIC,MAAM,kCAEjBJ,MAAK,SAAAK,GACJX,EAAKD,SAAS,CACZX,eAAe,EACfF,KAAMyB,EAAazB,UAGtB0B,OAAM,SAAAzB,GACLa,EAAKD,SAAS,CACZX,eAAe,EACfD,MAAO,qC,mCAIFQ,GACXG,KAAKC,SAAS,CAAET,WAAYK,EAAEE,OAAOD,U,+BAG7B,IACAR,EAAkBU,KAAKb,MAAvBG,cACR,OACE,kBAAC,IAAD,CAAQyB,UAAU,iBACdzB,EACA,kBAAC,EAAD,CAAQyB,UAAU,UAChB,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAMC,GAAG,SACP,yBACEC,IAAI,qDACJC,IAAI,OAIV,yBAAKH,UAAU,kBACb,kBAAC,IAAD,CACEI,MAAM,OACNC,KAAK,aACLC,MAAO,CAAEC,WAAY,SAErB,kBAAC,IAAKC,KAAN,CAAWC,IAAI,IAAIT,UAAU,aAC3B,yBAAKA,UAAU,cACb,2BACEU,KAAK,OACLC,KAAK,aACLC,SAAU3B,KAAKJ,aACfE,MAAOE,KAAKb,MAAMK,WAClBuB,UAAU,iBAEiB,IAA5Bf,KAAKb,MAAMI,aACV,kBAAC,IAAD,CACEyB,GAAE,+BAA0BhB,KAAKb,MAAMK,aAEvC,kBAAC,IAAD,CAAQiC,KAAK,UAAUV,UAAU,kBAAjC,WAKF,kBAAC,IAAD,CACEC,GAAE,+BAA0BhB,KAAKb,MAAMK,aAEvC,kBAAC,IAAD,CAAQiC,KAAK,UAAUV,UAAU,kBAAjC,YAMN,yBAAKA,UAAU,uBACb,kBAAC,IAAMa,MAAP,CACEb,UAAU,cACVW,KAAK,aACLG,aAAc,EACdR,MAAO,CAAEC,WAAY,SAErB,kBAAC,IAAD,CACEP,UAAU,eACVjB,MAAO,EACP6B,SAAU3B,KAAKN,aAHjB,UAOA,kBAAC,IAAD,CACEqB,UAAU,eACVjB,MAAO,EACP6B,SAAU3B,KAAKN,aAHjB,cAYV,yBAAKqB,UAAU,YACb,kBAAC,IAAD,CAAMC,GAAE,mBAAchB,KAAKb,MAAMC,KAAK,GAAG0C,SACvC,yBAAKb,IAAKjB,KAAKb,MAAMC,KAAK,GAAG2C,MAAOb,IAAI,MAG1C,kBAAC,IAAD,CAAQc,GAAG,SAASC,QAASjC,KAAKjB,mBAAmBY,KAAKK,OACxD,kBAAC,IAAD,CAAMyB,KAAK,cA3ED,U,GAjELS,IAAMC,W,oDCPdC,EAAgB,gBAChBC,EAAW,WCGXC,EAAc,kBAAM,SAAAC,GAC/BC,IACGC,IADH,yCAEGjC,MAAK,SAAAC,GACJ8B,EAAS,CACPd,KAAMW,EACNM,QAASjC,EAASkC,UAGrB7B,OAAM,SAAAL,GACL,OAAOmC,QAAQC,OAAOpC,Q,kBCNpBqC,G,OAAaC,IAAbD,UACAE,EAAYC,IAAZD,QAEFE,E,YACJ,WAAYpE,GAAQ,IAAD,8BACjB,4CAAMA,KACDK,MAAQ,CACXC,KAAM,GACNC,MAAO,KACPC,eAAe,EACf6D,KAAM,GACNC,SAAU,GACV5B,IAAK,GAEP,EAAK6B,OAAS,EAAKA,OAAO1D,KAAZ,gBACd,EAAK2D,kBAAoB,EAAKA,kBAAkB3D,KAAvB,gBACzB,EAAK4D,oBAAsB,EAAKA,oBAAoB5D,KAAzB,gBAC3B,EAAK6D,qBAAuB,EAAKA,qBAAqB7D,KAA1B,gBAbX,E,iFAgBE,IAAD,OAElBQ,MAAM,qDAAsD,CAC1DC,OAAQ,MACRC,YAAa,UACbC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB,oCAAoC,KAGrCC,MAAK,SAAAC,GACJ,GAAwB,MAApBA,EAASC,OAAgB,OAAOD,EAASE,OAC7C,MAAM,IAAIC,MAAM,kCAEjBJ,MAAK,SAAAK,GACJ4C,QAAQC,IAAI7C,EAAazB,MACzB,EAAKa,SAAS,CACZX,eAAe,EACfF,KAAMyB,EAAazB,UAGtB0B,OAAM,SAAAzB,GACL,EAAKY,SAAS,CACZX,eAAe,EACfD,MAAO,qC,6CAObsE,EADoB3D,KAAKlB,MAAjB6E,SACA,CACNC,SAAU,IACVC,SAAU7D,KAAKb,MAAMgE,KACrBrB,OAAQ9B,KAAKb,MAAMC,KAAK,GAAG0C,SAE7B9B,KAAKC,SAAS,CACZkD,KAAM,MAGRb,EADwBtC,KAAKlB,MAArBwD,iB,6BAIHwB,EAAcC,GACnB/D,KAAKC,SAAS,CACZmD,SAAUpD,KAAKb,MAAMiE,SAASY,OAAOF,O,6CAKvC,IAAI5D,EAAOF,KAEPiE,EAAuBjE,KAAKb,MAAMiE,SAASc,KAAI,SAAAnC,GACjD,IAAIY,EAAO,IAAIwB,SAKf,OAJAxB,EAAKyB,OAAO,QAASrC,EAAOA,EAAML,MAClCiB,EAAKyB,OAAO,OAAQlE,EAAKf,MAAMC,KAAK,GAAG0C,QAEvC5B,EAAKD,SAAS,CAAEmD,SAAU,GAAI5B,IAAK6C,KAAKC,WACjC9B,IAAM+B,KAAK,8CAA+C5B,MAEnEH,IACGgC,IAAIP,GACJzD,MAAK,SAASiE,OACd3D,OAAM,SAAA4D,GAAG,OAAIjB,QAAQC,IAAIgB,Q,wCAEZ7E,GAChB,IAAMC,EAAQD,EAAEE,OAAOD,MACvBE,KAAKC,SAAS,CACZkD,KAAMrD,M,+BAGD0B,GACPiC,QAAQC,IAAIlC,SAAYA,K,+BAGhB,IAAD,OAMP,OACE,yBAAKT,UAAU,gBACb,kBAAC,IAAD,CAAMA,UAAU,OAAO4D,iBAAiB,IAAIhD,SAAU3B,KAAK4E,UACzD,kBAAC5B,EAAD,CAASjC,UAAU,MAAM8D,IAAI,WAAWrD,IAAI,KAC1C,kBAAC,EAAD,CACE1B,MAAOE,KAAKb,MAAMgE,KAClBxB,SAAU3B,KAAKsD,oBAEjB,kBAAC,IAAD,CACE7B,KAAK,UACLV,UAAU,WACVkB,QAASjC,KAAKuD,oBAAoB5D,KAAKK,OAHzC,aAQF,kBAACgD,EAAD,CAASjC,UAAU,MAAM8D,IAAI,YAAYrD,IAAI,KAC3C,kBAAC,IAAD,CACEsD,UAAU,EACVC,WAAW,gBACXpD,SAAU3B,KAAKqD,OACf2B,aAAc,CAAC,OAAQ,OAAQ,QAC/BC,YAAa,QACbC,aAAa,EACb1D,IAAKxB,KAAKb,MAAMqC,MAEjBxB,KAAKb,MAAMiE,UAAYpD,KAAKb,MAAMiE,SAAS+B,OAAS,EACnD,kBAAC,IAAD,CACE1D,KAAK,UACLV,UAAU,WACVkB,QAAS,WACP,EAAKuB,uBAlCjB4B,IAAQC,QAAQ,2BA8BR,UAUE,Y,GAxIMlD,aAoJhBmD,EAAqB,CACzB3B,QD9IqB,SAAAhB,GAAI,OAAI,SAAAJ,GAC7BC,IACG+B,KADH,gDACyD5B,GACtDnC,MACC,SAAAC,GACE8B,EAAS,CAAEd,KAAMY,EAAUK,QAASjC,EAASkC,KAAK,KAClDJ,EAASD,QAEX,SAAAjD,GACEkD,EAAS,CAAEd,KAAMY,EAAUhD,MAAOA,IAClCoE,QAAQC,IAAIrE,MAGfyB,OAAM,SAAA4D,GACLjB,QAAQC,IAAIgB,QCiIhBpC,eAGaiD,eAVS,SAAApG,GAAK,MAAK,CAChCqG,MAAOrG,EAAMsG,gBAAgBD,SASSF,EAAzBC,CAA6CrC,G,oCCvJtDwC,G,kNAiBJC,kBAAoB,oBAAAC,EAAAC,OAAA,iDACVvD,EAAgB,EAAKxD,MAArBwD,eADU,sC,0EAhBTzC,GACT,IAAIiG,EAAoBC,SAASC,eAAe,OAASnG,GACrDoG,EAAwBF,SAASC,eAAe,OAASnG,GACzDqG,EAAuBH,SAASC,eAAe,QAAUnG,GAElC,SAAvBiG,EAAKzE,MAAM8E,SACbL,EAAKzE,MAAM8E,QAAU,SACrBD,EAAQE,UAAY,YACpBH,EAAS5E,MAAM8E,QAAU,SAEzBL,EAAKzE,MAAM8E,QAAU,OACrBD,EAAQE,UAAY,YACpBH,EAAS5E,MAAM8E,QAAU,Y,+BASnB,IAAD,OACCX,EAAUxF,KAAKlB,MAAf0G,MACR,OACE,oCACGA,GAASA,EAAML,OAAS,EACvB,6BACE,yBAAKpE,UAAU,gBACZyE,EAAMtB,KAAI,SAACK,EAAW8B,GAAZ,OACT,yBAAKtF,UAAU,OAAOS,IAAK6E,GACzB,yBAAKtF,UAAU,YACb,yBAAKE,IAAKsD,EAAK+B,OAAQpF,IAAI,MAE7B,yBAAKH,UAAU,aACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMC,GAAE,mBAAcuD,EAAKzC,SACzB,0BAAMf,UAAU,eAAewD,EAAKgC,WAEtC,0BAAMxF,UAAU,aACd,kBAAC,IAAD,CACEyF,KAAI,UAAKjC,EAAKkC,UAAUC,UAAU,EAAG,IAAjC,aAIS,IAAlBnC,EAAKX,SACJ,yBAAK7C,UAAU,aACb,yBAAKE,IAAKsD,EAAKV,SAAU3C,IAAI,GAAGH,UAAU,cAG5C,yBAAKA,UAAU,aACb,2BACGwD,EAAKV,SACH8C,MAAM,KACNC,OAAO,EAAG,IACVC,KAAK,KACR,0BAAM7E,GAAE,cAASuC,EAAKuC,UACtB,0BAAM9E,GAAE,cAASuC,EAAKuC,QAAU/F,UAAU,QACvCwD,EAAKV,SACH8C,MAAM,KACNC,OAAO,IACPC,KAAK,OAGXtC,EAAKV,SAAS8C,MAAM,KAAKxB,OAAS,GACjC,kBAAC,IAAD,CACElD,QAAS,SAAC8E,GACR,EAAKC,WACFD,EAAMhH,OAAuBiC,GAAG0E,UAAU,KAG/C1E,GAAE,eAAUuC,EAAKuC,SANnB,aAUE,aASlB,qD,GApFS3E,cA+FbmD,EAAqB,CACzBhD,eAGaiD,eARS,SAACpG,GAAD,MAAiB,CACvCqG,MAAOrG,EAAMsG,gBAAgBD,SAOSF,EAAzBC,CAA6CG,G,0DChG5DuB,IAAQC,IAAIC,IAAKC,IAAaC,IAAWC,IAAYC,KAE9C,IAqOQC,EArOf,YACE,WAAY1I,GAAQ,IAAD,8BACjB,4CAAMA,KASR2I,QAAU,SAAA3I,GAAU,IACVkD,EAAOlD,EAAM4I,MAAMC,OAAnB3F,GACRQ,IAAM,wCAAD,OAAyCR,IAAMxB,MAAK,SAAAoH,GACvD,EAAK3H,SAAS,CACZb,KAAMwI,EAAOjF,KAAK,SAZtB,EAAKxD,MAAQ,CACXC,KAAM,GACNC,MAAO,KACPC,eAAe,EACfuI,aAAc,IANC,EADrB,iFAmBuB,IAAD,OAClB1H,MAAM,qDAAsD,CAC1DC,OAAQ,MACRC,YAAa,UACbC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB,oCAAoC,KAGrCC,MAAK,SAAAC,GACJ,GAAwB,MAApBA,EAASC,OAAgB,OAAOD,EAASE,OAC7C,MAAM,IAAIC,MAAM,kCAEjBJ,MAAK,SAAAK,GAEJ,EAAKZ,SAAS,CACZX,eAAe,EACfuI,aAAchH,EAAazB,UAG9B0B,OAAM,SAAAzB,GACL,EAAKY,SAAS,CACZX,eAAe,EACfD,MAAO,mCAGbW,KAAKyH,QAAQzH,KAAKlB,SA9CtB,gDAgD4BA,GACxBkB,KAAKyH,QAAQ3I,KAjDjB,+BAoDY,IACAgJ,EAAUC,IAAVD,MACFE,EAAmB,CACvBC,WAAY,UACZC,aAAc,EACdC,aAAc,GACdC,OAAQ,EACRC,SAAU,UAGZ,OACE,yBAAKtH,UAAU,gBACXf,KAAKb,MAAMC,KAAKkJ,eAAe,UAQ/B,oCACE,yBAAKvH,UAAU,mBACb,wBAAIiB,GAAG,wBAAP,gBACA,yBAAKjB,UAAU,WACb,yBAAKA,UAAU,SACb,0BAAMA,UAAU,cAAhB,WACCf,KAAKb,MAAM0I,aAAa,IACzB7H,KAAKb,MAAM0I,aAAa,GAAG/F,SACzB9B,KAAKb,MAAMC,KAAK0C,OAChB,kBAAC,IAAD,CAAMd,GAAE,uBAAkBhB,KAAKb,MAAMC,KAAK0C,SACxC,kBAAC,IAAD,CACEyG,KAAMC,IACNC,MAAM,WACNC,KAAK,OAEP,0BAAM3H,UAAU,qBAAhB,iBAEA,MAGN,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,YACb,yBAAKE,IAAKjB,KAAKb,MAAMC,KAAK2C,MAAOb,IAAI,MAEvC,wBAAIH,UAAU,gBACXf,KAAKb,MAAMC,KAAKuJ,GACf,wBAAI5H,UAAU,eACZ,uBACE6H,KAAM5I,KAAKb,MAAMC,KAAKuJ,GACtB5I,OAAO,SACP8I,IAAI,uBAEJ,kBAAC,IAAD,CAAiBN,KAAMhB,IAAUkB,MAAM,cAGzC,KACHzI,KAAKb,MAAMC,KAAK0J,GACf,wBAAI/H,UAAU,eACZ,uBACE6H,KAAM5I,KAAKb,MAAMC,KAAK0J,GACtB/I,OAAO,SACP8I,IAAI,uBAEJ,kBAAC,IAAD,CACEN,KAAMnB,IACNqB,MAAM,cAIV,KAEHzI,KAAKb,MAAMC,KAAK2J,GACf,wBAAIhI,UAAU,eACZ,uBACE6H,KAAM5I,KAAKb,MAAMC,KAAK2J,GACtBhJ,OAAO,SACP8I,IAAI,uBAEJ,kBAAC,IAAD,CACEN,KAAMjB,IACNmB,MAAM,cAIV,KAEHzI,KAAKb,MAAMC,KAAK4J,GACf,wBAAIjI,UAAU,eACZ,uBACE6H,KAAM5I,KAAKb,MAAMC,KAAK4J,GACtBjJ,OAAO,SACP8I,IAAI,uBAEJ,kBAAC,IAAD,CAAiBN,KAAMlB,IAAWoB,MAAM,cAG1C,OAGR,yBAAK1H,UAAU,gBACb,gDACqBf,KAAKb,MAAMC,KAAKmH,SAAU,IAC5CvG,KAAKb,MAAMC,KAAK6J,OAAhB,4CAEMjJ,KAAKb,MAAMC,KAAK6J,QACnB,MAEN,2BACG,IACAjJ,KAAKb,MAAMC,KAAK8J,QAAhB,6BACyBlJ,KAAKb,MAAMC,KAAK8J,SACtC,KAAM,SAMpB,yBAAKnI,UAAU,eACb,0BAAMA,UAAU,cAAhB,OAEA,yBAAKA,UAAU,YACb,uBAAGA,UAAU,eAAef,KAAKb,MAAMC,KAAK+J,KAC5C,yBAAKpI,UAAU,UACb,0BAAMA,UAAU,aAAhB,UAEA,yBAAKA,UAAU,eACZf,KAAKb,MAAMC,KAAKgK,OAAOlF,KAAI,SAACmF,EAAOhD,GAAR,OAC1B,kBAAC,IAAD,CAAK7E,IAAK6E,GAAQgD,EAAMC,kBAMlC,yBAAKvI,UAAU,qBACb,0BAAMA,UAAU,cAAhB,aACA,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CACEwI,UAAU,EACV5E,iBAAkB,CAAC,KACnB6E,WAAY,gBAAGC,EAAH,EAAGA,SAAH,OACV,kBAAC,IAAD,CAAMhI,KAAK,cAAciI,OAAQD,EAAW,GAAK,MAIlDzJ,KAAKb,MAAMC,KAAKuK,SAASzF,KAAI,SAAC0F,EAASvD,GAAV,OAC5B,kBAACyB,EAAD,CACE+B,OAAQD,EAAQE,aAChBtI,IAAK6E,EAAQ,EACbhF,MAAO2G,EACPjH,UAAU,gBAEV,yBAAKA,UAAU,yBACb,uBAAGA,UAAU,sBACV6I,EAAQG,aAEX,8BACE,uBACEnB,KAAI,iBAAYgB,EAAQI,aACxBjK,OAAO,SACP8I,IAAI,uBAHN,0BAhJhB,6BACE,yBACE5H,IAAI,mEACJC,IAAI,WApElB,GAA6BiB,aCqEd8H,EAnFf,YACE,WAAYnL,GAAQ,IAAD,8BACjB,4CAAMA,KAMR2I,QAAU,WACR,IACMyC,EADY,IAAIC,gBAAgBnL,OAAOoL,SAASC,QAC9B5H,IAAI,SACxBvC,EAAI,eACRsC,IAAM,gDAAD,OAAiD0H,IAAS1J,MAC7D,SAAAoH,GACE1H,EAAKD,SAAS,CACZqK,mBAAoB1C,EAAOjF,WAZjC,EAAKxD,MAAQ,CACXmL,mBAAoB,IAHL,EADrB,iFAqBItK,KAAKyH,QAAQzH,KAAKlB,SArBtB,gDAuB4BA,GACxBkB,KAAKyH,QAAQ3I,KAxBjB,+BA4BI,OACE,6BAC4C,IAAzCkB,KAAKb,MAAMmL,mBAAmBnF,OAC7B,6BACE,4BACE,yBACElE,IAAI,oEACJC,IAAI,OAKV,yBAAKH,UAAU,mBACb,wBAAIiB,GAAG,wBAAP,gBACChC,KAAKb,MAAMmL,mBAAmBpG,KAAI,SAAC9E,EAAMiH,GAAP,OACjC,oCACE,yBAAKtF,UAAU,UAAUS,IAAK6E,GAC5B,yBAAKtF,UAAU,kBACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,YACb,yBAAKE,IAAK7B,EAAK2C,MAAOb,IAAI,OAG9B,yBAAKH,UAAU,gBACb,gDACqB3B,EAAKmH,SAAU,IACjCnH,EAAK6J,OAAL,4CAEI7J,EAAK6J,QACN,MAEN,2BACG,IACA7J,EAAK8J,QAAL,6BACyB9J,EAAK8J,SAC3B,KAAM,KAGZ,kBAAC,IAAD,CAAMlI,GAAE,mBAAc5B,EAAK0C,SACzB,0BAAMf,UAAU,uBAAhB,8BAnExB,GAAkCoB,aCkHnB8H,EAhHf,YACE,WAAYnL,GAAQ,IAAD,8BACjB,4CAAMA,KAMR2I,QAAU,WACR,IACMyC,EADY,IAAIC,gBAAgBnL,OAAOoL,SAASC,QAC9B5H,IAAI,SACxBvC,EAAI,eACRsC,IAAM,gDAAD,OAAiD0H,IAAS1J,MAC7D,SAAAoH,GACE1H,EAAKD,SAAS,CACZsK,kBAAmB3C,EAAOjF,WAZhC,EAAKxD,MAAQ,CACXoL,kBAAmB,IAHJ,EADrB,iFAqBIvK,KAAKyH,QAAQzH,KAAKlB,SArBtB,gDAuB4BA,GACxBkB,KAAKyH,QAAQ3I,KAxBjB,iCA0Bae,GACT,IAAIiG,EAAOC,SAASC,eAAe,OAASnG,GACxCoG,EAAWF,SAASC,eAAe,OAASnG,GAC5CqG,EAAUH,SAASC,eAAe,QAAUnG,GAErB,SAAvBiG,EAAKzE,MAAM8E,SACbL,EAAKzE,MAAM8E,QAAU,SACrBD,EAAQE,UAAY,YACpBH,EAAS5E,MAAM8E,QAAU,SAEzBL,EAAKzE,MAAM8E,QAAU,OACrBD,EAAQE,UAAY,YACpBH,EAAS5E,MAAM8E,QAAU,YAtC/B,+BA0CY,IAAD,OAEP,OADA1C,QAAQC,IAAI1D,KAAKb,MAAMoL,mBAErB,6BAC2C,IAAxCvK,KAAKb,MAAMoL,kBAAkBpF,OAC5B,6BACE,4BACG,IACD,yBACElE,IAAI,oEACJC,IAAI,OAKV,yBAAKH,UAAU,gBACb,wBAAIiB,GAAG,wBAAP,gBACChC,KAAKb,MAAMoL,kBAAkBrG,KAAI,SAACK,EAAM8B,GAAP,OAChC,oCACE,yBAAKtF,UAAU,OAAOS,IAAK6E,GACzB,yBAAKtF,UAAU,YACb,yBAAKE,IAAKsD,EAAK+B,OAAQpF,IAAI,MAE7B,yBAAKH,UAAU,aACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMC,GAAE,mBAAcuD,EAAKzC,SACzB,0BAAMf,UAAU,eAAewD,EAAKgC,WAEtC,0BAAMxF,UAAU,aACd,kBAAC,IAAD,CACEyF,KAAI,UAAKjC,EAAKkC,UAAUC,UAAU,EAAG,IAAjC,aAIV,yBAAK3F,UAAU,aACb,2BACGwD,EAAKV,SACH8C,MAAM,KACNC,OAAO,EAAG,IACVC,KAAK,KACR,0BAAM7E,GAAE,cAASuC,EAAKuC,SAAtB,OACA,0BAAM9E,GAAE,cAASuC,EAAKuC,QAAU/F,UAAU,QACvCwD,EAAKV,SACH8C,MAAM,KACNC,OAAO,IACPC,KAAK,OAGXtC,EAAKV,SAAS8C,MAAM,KAAKxB,OAAS,GACjC,kBAAC,IAAD,CACElD,QAAS,SAAA8E,GACP,EAAKC,WAAWD,EAAMhH,OAAOiC,GAAG0E,UAAU,KAE5C1E,GAAE,eAAUuC,EAAKuC,SAJnB,aAQE,kBAnG1B,GAAkC3E,a,iECM1BqI,GAAWC,KAAXD,OAGKE,GAAb,YACE,WAAY5L,GAAQ,IAAD,8BACjB,4CAAMA,KAaR2I,QAAU,SAAA3I,GACR2E,QAAQC,IAAI5E,GACZ,IAAMkD,EAAKlD,EAAMkD,GACjBQ,IAAM,2CAA2ChC,MAAK,SAAAoH,GACpDnE,QAAQC,IAAIkE,EAAOjF,KAAK,IACxB,EAAK1C,SAAS,CACZ0K,QAAS/C,EAAOjF,KAAK,QAIzBH,IAAM,wCAAD,OAAyCR,IAAMxB,MAAK,SAAAoH,GACvDnE,QAAQC,IAAIkE,EAAOjF,KAAK,IACxB,EAAK1C,SAAS,CACZb,KAAMwI,EAAOjF,KAAK,QAItBH,IAAM,0CAA0ChC,MAAK,SAAAoH,GACnDnE,QAAQC,IAAIkE,EAAOjF,KAAK,IACxB,EAAK1C,SAAS,CACZmJ,OAAQxB,EAAOjF,KAAK,QAIxBH,IAAM,6CAA6ChC,MAAK,SAAAoH,GACtDnE,QAAQC,IAAIkE,EAAOjF,KAAK,IACxB,EAAK1C,SAAS,CACZ2K,UAAWhD,EAAOjF,KAAK,SAzCV,EAkDnBkI,aAAe,SAAAhL,GACbA,EAAEiL,iBACF,IAAI5K,EAAI,eACR,EAAKpB,MAAMiM,KAAKC,yBAAwB,SAACtG,EAAKD,GACvCC,IACH,EAAKuG,cACLxG,EAAO6B,OAAS,EAAKnH,MAAMC,KAAK2C,MAChC0C,EAAO3C,OAAS,EAAK3C,MAAMC,KAAK0C,OAChC2B,QAAQC,IAAI,4BAA6Be,GACzCjC,IACG+B,KAAK,kDAAmDE,GACxDjE,MAAK,SAASC,GACbgD,QAAQC,IAAIxD,EAAKf,MAAM+L,QAAQhL,EAAKf,MAAM+L,QAAQ/F,OAAS,IAC3D3C,IACG+B,KAAK,kDAAmD,CACvDzC,OAAQ5B,EAAKf,MAAMC,KAAK0C,OACxBoJ,QAAShL,EAAKf,MAAM+L,QAAQhL,EAAKf,MAAM+L,QAAQ/F,OAAS,KAEzD3E,MAAK,SAASC,GACbgD,QAAQC,IAAIjD,MAEbK,OAAM,SAASzB,GACdoE,QAAQC,IAAIrE,MAEhBoE,QAAQC,IAAIjD,MAEbK,OAAM,SAASzB,GACdoE,QAAQC,IAAIrE,UAIpBoE,QAAQC,IAAI,EAAKvE,MAAM+L,UA9EvB,EAAK/L,MAAQ,CACXgM,cAAc,EACdC,mBAAoB,GACpBhM,KAAM,KACNuL,QAAS,KACTU,SAAU,KACVjC,OAAQ,KACRwB,UAAW,KACXM,QAAS,IAXM,EADrB,iFAgDIlL,KAAKyH,QAAQzH,KAAKlB,SAhDtB,yCAqFqBgB,GACjB2D,QAAQC,IAAR,mBAAwB5D,MAtF5B,yCAyFqBA,GACjBE,KAAKC,SAAS,CACZiL,QAAQ,GAAD,oBAAMlL,KAAKb,MAAM+L,SAAjB,CAA0BpL,MAEnC2D,QAAQC,IAAI1D,KAAKb,MAAM+L,WA7F3B,4CA+FwBpL,GACpB2D,QAAQC,IAAR,mBAAwB5D,MAhG5B,oCAoGIsF,IAAQkG,QAAQ,CAAEC,QAAS,cAAe/J,IAtGlC,cAuGRgK,YAAW,WACTpG,IAAQC,QAAQ,CAAEkG,QAAS,WAAY/J,IAxGjC,YAwGsCiK,SAAU,MACrD,QAvGP,+BA0GY,IACAC,EAAsB1L,KAAKlB,MAAMiM,KAAjCW,kBACA5I,EAAaC,IAAbD,SAyBR,OACE,oCACG9C,KAAKb,MAAMC,KACV,kBAAC,IAAD,iBA1BiB,CACrBuM,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAmBV,CAA0BG,SAAUhM,KAAK6K,eACvC,kBAAC,IAAKtJ,KAAN,CACE0K,MACE,8CAEE,kBAAC,KAAD,CAASC,MAAM,oCACb,kBAAC,IAAD,CAAMzK,KAAK,yBAKhBiK,EAAkB,WAAY,CAC7BS,aAAcnM,KAAKb,MAAMC,KAAKmH,SAC9B6F,MAAO,CACL,CACEC,UAAU,EACVjH,QAAS,+BACTkH,YAAY,KANjBZ,CASE,kBAAC,IAAD,QAEL,kBAAC,IAAKnK,KAAN,CAAW0K,MAAO,6CACfP,EAAkB,WAAY,CAC7BS,aAAcnM,KAAKb,MAAMC,KAAK6J,OAC9BmD,MAAO,CACL,CACEC,UAAU,EACVjH,QAAS,sCALdsG,CASC,kBAAC,KAAD,CACE/J,SAAU3B,KAAKuM,mBAAmB5M,KAAKK,MACvCqB,MAAO,CAAEmL,MAAO,MAEfxM,KAAKb,MAAMwL,QACR3K,KAAKb,MAAMwL,QAAQzG,KAAI,SAAC+E,EAAQ5C,GAAT,OACrB,kBAACmE,GAAD,CAAQ1K,MAAOmJ,EAAOwD,SAAUjL,IAAK6E,GAClC4C,EAAOyD,eAGZ,QAIV,kBAAC,IAAKnL,KAAN,CAAW0K,MAAO,4CACfP,EAAkB,SAAU,CAC3BU,MAAO,CACL,CACEhH,QAAS,+BACTkH,YAAY,KAJjBZ,CAQC,oCACE,kBAAC,KAAD,CACEzK,IAAKjB,KAAKb,MAAMC,KAAK2C,MACrB4K,MAAM,SACNjE,KAAM,KAER,kBAAC,IAAD,wBAIN,kBAAC,IAAKnH,KAAN,CAAW0K,MAAO,0CACfP,EAAkB,MAAO,CACxBS,aAAcnM,KAAKb,MAAMC,KAAK+J,IAC9BiD,MAAO,CACL,CACEC,UAAU,EACVjH,QAAS,yBACTkH,YAAY,KANjBZ,CASE,kBAAC5I,EAAD,CAAU8J,YAAY,2BAG3B,kBAAC,IAAKrL,KAAN,CAAW0K,MAAM,UACdP,EAAkB,SAAU,CAC3BU,MAAO,CACL,CACEhH,QAAS,+BAHdsG,CAOC,kBAAC,KAAD,CACEtK,KAAK,OACLC,MAAO,CAAEmL,MAAO,QAChBI,YAAY,qBACZjL,SAAU3B,KAAK6M,mBAAmBlN,KAAKK,OAEtCA,KAAKb,MAAMiK,OACRpJ,KAAKb,MAAMiK,OAAOlF,KAAI,SAACmF,EAAOhD,GAAR,OACpB,kBAACmE,GAAD,CAAQ1K,MAAOuJ,EAAM6B,QAAU,GAAI1J,IAAK6E,GACrCgD,EAAMC,cAGX,QAIV,kBAAC,IAAK/H,KAAN,CAAW0K,MAAO,wDACfP,EAAkB,YAAa,CAC9BS,aAAcnM,KAAKb,MAAMC,KAAK8J,QAC9BkD,MAAO,CACL,CACEC,UAAU,EACVjH,QAAS,2CALdsG,CASC,kBAAC,KAAD,CACE/J,SAAU3B,KAAK8M,sBACfzL,MAAO,CAAEmL,MAAO,MAEfxM,KAAKb,MAAMyL,UACR5K,KAAKb,MAAMyL,UAAU1G,KAAI,SAACxD,EAAQ2F,GAAT,OACvB,kBAACmE,GAAD,CAAQ1K,MAAOY,EAAOqM,MAAOvL,IAAK6E,GAC/B3F,EAAOkK,cAGZ,QAIV,kBAAC,IAAKrJ,KA9Ia,CACzBwK,WAAY,CACVH,GAAI,CACFC,KAAM,GACNmB,OAAQ,GAEVlB,GAAI,CACFD,KAAM,GACNmB,OAAQ,KAuIJ,kBAAC,IAAD,CAAQvL,KAAK,UAAUwL,SAAS,UAAhC,YAKF,UA5QZ,GAA0B9K,aAmRX+K,GADOC,IAAKC,OAAO,CAAE1L,KAAM,aAApByL,CAAmCzC,IC5R5C2C,GAAb,YACE,WAAYvO,GAAQ,IAAD,8BACjB,4CAAMA,KAaR2I,QAAU,SAAA3I,GACR2E,QAAQC,IAAI5E,GACZ,IAAMkD,EAAKlD,EAAMkD,GACjBQ,IAAM,wCAAD,OAAyCR,IAAMxB,MAAK,SAAAoH,GACvDnE,QAAQC,IAAIkE,EAAOjF,KAAK,IACxB,EAAK1C,SAAS,CACZb,KAAMwI,EAAOjF,KAAK,SApBL,EA4BnB2K,kBAAoB,SAAAzN,GAClBA,EAAEiL,iBACF,IAAI5K,EAAI,eACR,EAAKpB,MAAMiM,KAAKC,yBAAwB,SAACtG,EAAKD,GACvCC,IACHjB,QAAQC,IAAIe,GACZ,EAAKwG,cACLzI,IACG+B,KAAK,oDAAqD,CACzDzC,OAAQ5B,EAAKf,MAAMC,KAAK0C,OACxByL,SAAU9I,EAAO8I,SACjBC,OAAQ/I,EAAO+I,OACfC,QAAShJ,EAAOgJ,QAChBC,SAAUjJ,EAAOiJ,WAElBlN,MAAK,SAASC,GACbgD,QAAQC,IAAIjD,MAEbK,OAAM,SAASzB,GACdoE,QAAQC,IAAIrE,WA5CpB,EAAKF,MAAQ,CACXgM,cAAc,EACdC,mBAAoB,GACpBhM,KAAM,KACNuL,QAAS,KACTU,SAAU,KACVjC,OAAQ,KACRwB,UAAW,KACXM,QAAS,IAXM,EADrB,iFA0BIlL,KAAKyH,QAAQzH,KAAKlB,SA1BtB,oCAsDIsG,IAAQkG,QAAQ,CAAEC,QAAS,cAAe/J,IAxDlC,cAyDRgK,YAAW,WACTpG,IAAQC,QAAQ,CAAEkG,QAAS,WAAY/J,IA1DjC,YA0DsCiK,SAAU,MACrD,QAzDP,+BA2DY,IACAC,EAAsB1L,KAAKlB,MAAMiM,KAAjCW,kBAwBR,OACE,oCACG1L,KAAKb,MAAMC,KACV,kBAAC,IAAD,iBAzBiB,CACrBuM,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAkBV,CAA0BG,SAAUhM,KAAKsN,oBACvC,kBAAC,IAAK/L,KAAN,CAAW0K,MAAO,qDACfP,EAAkB,SAAU,CAC3BS,aAAcnM,KAAKb,MAAMC,KAAKuJ,GAC9ByD,MAAO,CACL,CACEC,UAAU,EACVjH,QAAS,4BACTkH,YAAY,KANjBZ,CASE,kBAAC,IAAD,QAEL,kBAAC,IAAKnK,KAAN,CAAW0K,MAAO,+CACfP,EAAkB,WAAY,CAC7BS,aAAcnM,KAAKb,MAAMC,KAAK0J,GAC9BsD,MAAO,CACL,CACEhH,QAAS,8BACTkH,YAAY,KALjBZ,CAQE,kBAAC,IAAD,QAEL,kBAAC,IAAKnK,KAAN,CAAW0K,MAAO,+CACfP,EAAkB,WAAY,CAC7BS,aAAcnM,KAAKb,MAAMC,KAAK2J,GAC9BqD,MAAO,CACL,CACEhH,QAAS,8BACTkH,YAAY,KALjBZ,CAQE,kBAAC,IAAD,QAEL,kBAAC,IAAKnK,KAAN,CAAW0K,MAAO,8CACfP,EAAkB,UAAW,CAC5BS,aAAcnM,KAAKb,MAAMC,KAAK4J,GAC9BoD,MAAO,CACL,CACEhH,QAAS,6BACTkH,YAAY,KALjBZ,CAQE,kBAAC,IAAD,QAEL,kBAAC,IAAKnK,KA7Da,CACzBwK,WAAY,CACVH,GAAI,CACFC,KAAM,GACNmB,OAAQ,GAEVlB,GAAI,CACFD,KAAM,GACNmB,OAAQ,KAsDJ,kBAAC,IAAD,CAAQvL,KAAK,UAAUwL,SAAS,UAAhC,YAKF,UA3IZ,GAA0B9K,aAkJXwL,GADKR,IAAKC,OAAO,CAAE1L,KAAM,aAApByL,CAAmCE,ICnJ/CvK,GAAaC,IAAbD,SAGK8K,GAAb,YACE,WAAY9O,GAAQ,IAAD,8BACjB,4CAAMA,KAaR2I,QAAU,SAAA3I,GACR2E,QAAQC,IAAI5E,GACZ,IAAMkD,EAAKlD,EAAMkD,GACjBQ,IAAM,wCAAD,OAAyCR,IAAMxB,MAAK,SAAAoH,GACvDnE,QAAQC,IAAIkE,EAAOjF,KAAK,IACxB,EAAK1C,SAAS,CACZb,KAAMwI,EAAOjF,KAAK,SApBL,EA4BnBkL,qBAAuB,SAAAhO,GACrBA,EAAEiL,iBACF,IAAI5K,EAAI,eACR,EAAKpB,MAAMiM,KAAKC,yBAAwB,SAACtG,EAAKD,GACvCC,IACH,EAAKuG,cACLxH,QAAQC,IAAIe,GACZjC,IACG+B,KAAK,sDAAuD,CAC3DzC,OAAQ5B,EAAKf,MAAMC,KAAK0C,OACxBoK,MAAOzH,EAAOqF,aACdgE,YAAarJ,EAAOsF,YACpBgE,KAAMtJ,EAAOuF,cAEdxJ,MAAK,SAASC,GACbgD,QAAQC,IAAIjD,MAEbK,OAAM,SAASzB,GACdoE,QAAQC,IAAIrE,WA3CpB,EAAKF,MAAQ,CACXgM,cAAc,EACdC,mBAAoB,GACpBhM,KAAM,KACNuL,QAAS,KACTU,SAAU,KACVjC,OAAQ,KACRwB,UAAW,KACXM,QAAS,IAXM,EADrB,iFA2BIlL,KAAKyH,QAAQzH,KAAKlB,SA3BtB,oCAqDIsG,IAAQkG,QAAQ,CAAEC,QAAS,oBAAqB/J,IAvDxC,cAwDRgK,YAAW,WACTpG,IAAQC,QAAQ,CAAEkG,QAAS,iBAAkB/J,IAzDvC,YAyD4CiK,SAAU,MAC3D,QAxDP,+BA2DY,IAAD,OACCC,EAAsB1L,KAAKlB,MAAMiM,KAAjCW,kBAyBR,OACE,oCACG1L,KAAKb,MAAMC,KACV,kBAAC,IAAD,iBA1BiB,CACrBuM,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAmBV,CAA0BG,SAAUhM,KAAK6N,uBACvC,kBAAC,IAAKtM,KAAN,CAAW0K,MAAO,mDACfP,EAAkB,eAAgB,CACjCU,MAAO,CACL,CACEC,UAAU,EACVjH,QAAS,kCACTkH,YAAY,KALjBZ,CAQE,kBAAC,IAAD,QAEL,kBAAC,IAAKnK,KAAN,CAAW0K,MAAO,kDACfP,EAAkB,cAAe,CAChCU,MAAO,CACL,CACEC,UAAU,EACVjH,QAAS,iCACTkH,YAAY,KALjBZ,CAQE,kBAAC,GAAD,CAAUsC,KAAM,MAErB,kBAAC,IAAKzM,KAAN,CAAW0K,MAAO,kDACfP,EAAkB,cAAe,CAChCU,MAAO,CACL,CACEC,UAAU,EACVjH,QAAS,iCACTkH,YAAY,KALjBZ,CAQE,kBAAC,IAAD,QAGL,kBAAC,IAAKnK,KAnDa,CACzBwK,WAAY,CACVH,GAAI,CACFC,KAAM,GACNmB,OAAQ,GAEVlB,GAAI,CACFD,KAAM,GACNmB,OAAQ,KA4CJ,kBAAC,IAAD,CAAQvL,KAAK,UAAUwL,SAAS,UAAhC,OAGA,kBAAC,IAAD,CACEhL,QAAS,SAAApC,GACP,EAAKf,MAAMiM,KAAKkD,eAElBlN,UAAU,aAJZ,WAUF,UAzIZ,GAA0BoB,aAgJX+L,GADGf,IAAKC,OAAO,CAAE1L,KAAM,aAApByL,CAAmCS,IC7I7C5K,GAAYC,IAAZD,QAEFmL,G,YACJ,WAAYrP,GAAQ,IAAD,8BACjB,4CAAMA,KAcR2I,QAAU,SAAA3I,GAAU,IACVkD,EAAOlD,EAAM4I,MAAMC,OAAnB3F,GACRyB,QAAQC,IAAI1B,GACZ,EAAK/B,SAAS,CAAE+B,GAAIA,IACpBQ,IAAM,wCAAD,OAAyCR,IAAMxB,MAAK,SAAAoH,GACvDnE,QAAQC,IAAIkE,EAAOjF,KAAK,IACxB,EAAK1C,SAAS,CACZb,KAAMwI,EAAOjF,KAAK,SAnBtB,EAAKxD,MAAQ,CACXgM,cAAc,EACdC,mBAAoB,GACpBhM,KAAM,KACNuL,QAAS,KACTU,SAAU,KACVjC,OAAQ,KACRwB,UAAW,KACXM,QAAS,IAXM,E,iFA4BjBlL,KAAKyH,QAAQzH,KAAKlB,S,+BAIlB,OACE,oCACGkB,KAAKb,MAAMC,KACV,6BACE,yBAAK2B,UAAU,gBACb,wBAAIiB,GAAG,wBAAP,gBACA,yBAAKjB,UAAU,aACb,kBAAC,IAAD,CAAM4D,iBAAiB,IAAIhD,SAAU3B,KAAK4E,UACxC,kBAAC,GAAD,CAASC,IAAI,aAAarD,IAAI,KAC5B,kBAAC,GAAD,CAAeQ,GAAIhC,KAAKb,MAAM6C,MAEhC,kBAAC,GAAD,CAAS6C,IAAI,eAAerD,IAAI,KAC9B,kBAAC,GAAD,CAAaQ,GAAIhC,KAAKb,MAAM6C,MAE9B,kBAAC,GAAD,CAAS6C,IAAI,YAAYrD,IAAI,KAC3B,kBAAC,GAAD,CAAWQ,GAAIhC,KAAKb,MAAM6C,UAMlC,U,GAtDcE,IAAMC,WA6DjBiM,GADSjB,IAAKC,OAAO,CAAE1L,KAAM,YAApByL,CAAkCgB,I,mBCpEpDE,GAAe,CACnB7I,MAAO,ICAM8I,oBAAgB,CAC7B7I,gBDEK,WAAwD,IAA/BtG,EAA8B,uDAAtBkP,GAAcE,EAAQ,uCAC5D,OAAQA,EAAO9M,MACb,KAAKW,EACH,OAAO,gBACFjD,EADL,CAEEqG,MAAO+I,EAAO7L,UAElB,KAAKL,EACH,OAAIkM,EAAOlP,MACF,GAEA,gBACFF,EADL,CAEEqG,MAAM,GAAD,oBAAMrG,EAAMqG,OAAZ,CAAmB+I,EAAO7L,YAGrC,QACE,OAAOvD,M,oBElBQR,I,kNAoDnB6P,mBAAqB,WAInBxP,OAAOC,KAAK,8CAA+C,U,EAG7DF,mBAAqB,WAGnBC,OAAOC,KAAK,8CAA+C,SAC3D,EAAKH,MAAMI,0B,wEA9DH,IACAI,EAAkBU,KAAKlB,MAAvBQ,cACR,OACE,yBAAKyB,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,aACb,oDACA,uBAAGA,UAAU,eAAb,uFAIA,yBAAKA,UAAU,wBACb,0BAAMiB,GAAG,cAAT,qBACA,wBAAIjB,UAAU,gBACZ,kKAKA,0GAGE,uBACE6H,KAAK,yCACL7I,OAAO,SACP8I,IAAI,uBAEH,IALH,aAMa,QAKnB,wBAAI9H,UAAU,QACXzB,EACC,wBAAI2C,QAASjC,KAAKjB,oBAAlB,UAEA,4BACE,kBAAC,qBAAD,CACEgC,UAAU,aACVkB,QAASjC,KAAKwO,8B,GAzCErM,cCDfsM,G,2MAWnBtP,MAAQ,CACNC,KAAM,GACNC,MAAO,KACPC,eAAe,G,EA6CjBoP,wBAA0B,WACxB,EAAKzO,SAAS,CAAEX,eAAe,K,mFA3CZ,IAAD,OAElBa,MAAM,qDAAsD,CAC1DC,OAAQ,MACRC,YAAa,UACbC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB,oCAAoC,KAGrCC,MAAK,SAAAC,GACJ,GAAwB,MAApBA,EAASC,OAAgB,OAAOD,EAASE,OAC7C,MAAM,IAAIC,MAAM,kCAEjBJ,MAAK,SAAAK,GACJ,EAAKZ,SAAS,CACZX,eAAe,EACfF,KAAMyB,EAAazB,UAGtB0B,OAAM,SAAAzB,GACL,EAAKY,SAAS,CACZX,eAAe,EACfD,MAAO,qC,+BAKL,IACAC,EAAkBU,KAAKb,MAAvBG,cAER,OACE,6BACE,kBAAC,GAAD,CACEA,cAAeA,EACfJ,uBAAwBc,KAAK0O,+B,GArDDvM,a,SCazBwM,GAAQC,aAAYN,GAAiBO,aAAgBC,OA0FnDC,G,2MAxFb5P,MAAQ,CACNC,KAAM,GACNC,MAAO,KACPC,eAAe,G,mFAEI,IAAD,OAElBa,MAAM,qDAAsD,CAC1DC,OAAQ,MACRC,YAAa,UACbC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB,oCAAoC,KAGrCC,MAAK,SAAAC,GACJ,GAAwB,MAApBA,EAASC,OAAgB,OAAOD,EAASE,OAC7C,MAAM,IAAIC,MAAM,kCAEjBJ,MAAK,SAAAK,GAEJ,EAAKZ,SAAS,CACZX,eAAe,EACfF,KAAMyB,EAAazB,UAGtB0B,OAAM,SAAAzB,GACL,EAAKY,SAAS,CACZX,eAAe,EACfD,MAAO,qC,+BAKL,IACAC,EAAkBU,KAAKb,MAAvBG,cACR,OACE,oCACIA,EAGA,oCACE,kBAAC,IAAD,CAAUqP,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,EAAD,MAEA,yBAAK5N,UAAU,aACb,kBAAC,KAAD,CAAQA,UAAU,OAChB,kBAAC,KAAD,CAAOiO,KAAK,SACV,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,KAAD,CACEC,OAAK,EACLD,KAAK,eACLE,UAAW1H,IAEb,kBAAC,KAAD,CACEyH,OAAK,EACLD,KAAK,iBACLE,UAAWjF,IAEb,kBAAC,KAAD,CACEgF,OAAK,EACLD,KAAK,iBACLE,UAAWC,IAOb,kBAAC,KAAD,CACEH,KAAK,mBACLE,UAAWd,UAnCvB,kBAAC,GAAD,W,GAzCQlM,IAAMC,WCNJiN,QACW,cAA7BpQ,OAAOoL,SAASiF,UAEe,UAA7BrQ,OAAOoL,SAASiF,UAEhBrQ,OAAOoL,SAASiF,SAAS3H,MACvB,2DCZN4H,IAASC,OAAO,kBAAC,GAAD,MAASxJ,SAASC,eAAe,SDmI3C,kBAAmBwJ,WACrBA,UAAUC,cAAcC,MAAMlP,MAAK,SAAAmP,GACjCA,EAAaC,kB","file":"static/js/main.91e954a1.chunk.js","sourcesContent":["import React from 'react';\nimport { Layout, Menu, Radio, Icon } from 'antd';\nimport { Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport './style.css';\nconst { Header } = Layout;\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {},\n      error: null,\n      authenticated: false,\n      searchToggle: 1,\n      searchWord: '',\n      searchResult: []\n    };\n    this.toggleClick = this.toggleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  toggleClick(e) {\n    const { value } = e.target;\n    this.setState({ searchToggle: value });\n  }\n\n  _handleLogoutClick = () => {\n    // Logout using Twitter passport api\n    // Set authenticated state to false in the HomePage\n    window.open('https://rbk-space.herokuapp.com/auth/logout', '_self');\n    this.props.handleNotAuthenticated();\n  };\n\n  componentDidMount() {\n    var that = this;\n    // Fetch does not send cookies. So you should add credentials: 'include'\n    fetch('https://rbk-space.herokuapp.com/auth/login/success', {\n      method: 'GET',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true\n      }\n    })\n      .then(response => {\n        if (response.status === 200) return response.json();\n        throw new Error('failed to authenticate user');\n      })\n      .then(responseJson => {\n        that.setState({\n          authenticated: true,\n          user: responseJson.user\n        });\n      })\n      .catch(error => {\n        that.setState({\n          authenticated: false,\n          error: 'Failed to authenticate user'\n        });\n      });\n  }\n  handleChange(e) {\n    this.setState({ searchWord: e.target.value });\n  }\n\n  render() {\n    const { authenticated } = this.state;\n    return (\n      <Layout className='header-layout'>\n        {!authenticated ? null : (\n          <Header className='header'>\n            <div className='logo'>\n              <Link to='/home'>\n                <img\n                  src='https://i.ibb.co/19WCkMF/output-onlinepngtools.png'\n                  alt=''\n                />\n              </Link>\n            </div>\n            <div className='search-wrapper'>\n              <Menu\n                theme='dark'\n                mode='horizontal'\n                style={{ lineHeight: '64px' }}\n              >\n                <Menu.Item key='1' className='menu-item'>\n                  <div className='search-bar'>\n                    <input\n                      type='text'\n                      name='search-bar'\n                      onChange={this.handleChange}\n                      value={this.state.searchWord}\n                      className='search-input'\n                    />\n                    {this.state.searchToggle === 1 ? (\n                      <Link\n                        to={`/search/users/?query=${this.state.searchWord}`}\n                      >\n                        <Button type='primary' className='ant-search-btn'>\n                          Search\n                        </Button>\n                      </Link>\n                    ) : (\n                      <Link\n                        to={`/search/posts/?query=${this.state.searchWord}`}\n                      >\n                        <Button type='primary' className='ant-search-btn'>\n                          Search\n                        </Button>\n                      </Link>\n                    )}\n                  </div>\n                  <div className='radio-group-wrapper'>\n                    <Radio.Group\n                      className='radio-group'\n                      name='radiogroup'\n                      defaultValue={1}\n                      style={{ lineHeight: '64px' }}\n                    >\n                      <Radio\n                        className='radio-button'\n                        value={1}\n                        onChange={this.toggleClick}\n                      >\n                        People\n                      </Radio>\n                      <Radio\n                        className='radio-button'\n                        value={2}\n                        onChange={this.toggleClick}\n                      >\n                        Posts\n                      </Radio>\n                    </Radio.Group>\n                  </div>\n                </Menu.Item>\n              </Menu>\n            </div>\n            <div className='user-img'>\n              <Link to={`/profile/${this.state.user[0].userId}`}>\n                <img src={this.state.user[0].image} alt='' />\n              </Link>\n\n              <Button id='logout' onClick={this._handleLogoutClick.bind(this)}>\n                <Icon type='export' />\n              </Button>\n            </div>\n          </Header>\n        )}\n      </Layout>\n    );\n  }\n}\n\nexport default Navbar;\n","export const GET_ALL_POSTS = 'GET_ALL_POSTS';\nexport const ADD_POST = 'ADD_POST';\n","import axios from 'axios';\nimport { GET_ALL_POSTS, ADD_POST } from './types';\n//import '../../config/config';\n\nexport const getAllPosts = () => dispatch => {\n  axios\n    .get(`https://rbk-space.herokuapp.com/posts`)\n    .then(response => {\n      dispatch({\n        type: GET_ALL_POSTS,\n        payload: response.data\n      });\n    })\n    .catch(response => {\n      return Promise.reject(response);\n    });\n};\n\nexport const addPost = data => dispatch => {\n  axios\n    .post(`https://rbk-space.herokuapp.com/user/post/add`, data)\n    .then(\n      response => {\n        dispatch({ type: ADD_POST, payload: response.data[0] });\n        dispatch(getAllPosts());\n      },\n      error => {\n        dispatch({ type: ADD_POST, error: error });\n        console.log(error);\n      }\n    )\n    .catch(err => {\n      console.log(err);\n    });\n};\n","import React, { Component } from 'react';\nimport { Tabs, Input, Button, message } from 'antd';\nimport { connect } from 'react-redux';\nimport { addPost, getAllPosts } from '../../actions/posts';\nimport ImageUploader from 'react-images-upload';\nimport './style.css';\nimport axios from 'axios';\n\nconst { TextArea } = Input;\nconst { TabPane } = Tabs;\n\nclass AddPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      error: null,\n      authenticated: false,\n      text: '',\n      pictures: [],\n      key: 0\n    };\n    this.onDrop = this.onDrop.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handlePostTextClick = this.handlePostTextClick.bind(this);\n    this.handlePostImageClick = this.handlePostImageClick.bind(this);\n  }\n\n  componentDidMount() {\n    // Fetch does not send cookies. So you should add credentials: 'include'\n    fetch('https://rbk-space.herokuapp.com/auth/login/success', {\n      method: 'GET',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true\n      }\n    })\n      .then(response => {\n        if (response.status === 200) return response.json();\n        throw new Error('failed to authenticate user');\n      })\n      .then(responseJson => {\n        console.log(responseJson.user);\n        this.setState({\n          authenticated: true,\n          user: responseJson.user\n        });\n      })\n      .catch(error => {\n        this.setState({\n          authenticated: false,\n          error: 'Failed to authenticate user'\n        });\n      });\n  }\n\n  handlePostTextClick() {\n    const { addPost } = this.props;\n    addPost({\n      postType: '0',\n      postBody: this.state.text,\n      userId: this.state.user[0].userId\n    });\n    this.setState({\n      text: ''\n    });\n    const { getAllPosts } = this.props;\n    getAllPosts();\n  }\n\n  onDrop(pictureFiles, pictureDataURLs) {\n    this.setState({\n      pictures: this.state.pictures.concat(pictureFiles)\n    });\n  }\n\n  handlePostImageClick() {\n    var that = this;\n    //generate a promise for every image upload\n    let uploadPhotosPromises = this.state.pictures.map(image => {\n      let data = new FormData();\n      data.append('image', image, image.name);\n      data.append('user', that.state.user[0].userId);\n      //the key here is a dummy prop, used for purpose of re-render the component\n      that.setState({ pictures: [], key: Math.random() });\n      return axios.post('https://rbk-space.herokuapp.com/uploadImage', data);\n    });\n    axios\n      .all(uploadPhotosPromises)\n      .then(function(values) {})\n      .catch(err => console.log(err));\n  }\n  handleInputChange(e) {\n    const value = e.target.value;\n    this.setState({\n      text: value\n    });\n  }\n  callback(key) {\n    console.log(key, typeof key);\n  }\n\n  render() {\n    //success message, shown when the upload success\n    const success = () => {\n      message.success('Uploaded Successfuly!');\n    };\n\n    return (\n      <div className='tabs-wrapper'>\n        <Tabs className='tabs' defaultActiveKey='1' onChange={this.callback}>\n          <TabPane className='tab' tab='Add Post' key='1'>\n            <TextArea\n              value={this.state.text}\n              onChange={this.handleInputChange}\n            />\n            <Button\n              type='primary'\n              className='post-btn'\n              onClick={this.handlePostTextClick.bind(this)}\n            >\n              Add Post\n            </Button>\n          </TabPane>\n          <TabPane className='tab' tab='Add Image' key='2'>\n            <ImageUploader\n              withIcon={true}\n              buttonText='Choose images'\n              onChange={this.onDrop}\n              imgExtension={['.jpg', '.png', '.gif']}\n              maxFileSize={5242880}\n              withPreview={true}\n              key={this.state.key}\n            />\n            {this.state.pictures && this.state.pictures.length > 0 ? (\n              <Button\n                type='primary'\n                className='post-btn'\n                onClick={() => {\n                  this.handlePostImageClick();\n                  success();\n                }}\n              >\n                Upload\n              </Button>\n            ) : null}\n          </TabPane>\n        </Tabs>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  posts: state.allPostsReducer.posts\n});\n\n// Actions\nconst mapDispatchToProps = {\n  addPost,\n  getAllPosts\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPost);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { getAllPosts } from './../../actions/posts';\nimport TimeAgo from 'react-timeago';\nimport './style.css';\n\ninterface IPostProps {\n  posts?: any;\n  getAllPosts?: any;\n}\n\nclass Post extends Component<IPostProps> {\n  myFunction(e: any) {\n    let dots: HTMLElement = document.getElementById('dots' + e)!;\n    let moreText: HTMLElement = document.getElementById('more' + e)!;\n    let btnText: HTMLElement = document.getElementById('myBtn' + e)!;\n\n    if (dots.style.display === 'none') {\n      dots.style.display = 'inline';\n      btnText.innerHTML = 'Read more';\n      moreText.style.display = 'none';\n    } else {\n      dots.style.display = 'none';\n      btnText.innerHTML = 'Read less';\n      moreText.style.display = 'inline';\n    }\n  }\n\n  componentDidMount = async () => {\n    const { getAllPosts } = this.props;\n    getAllPosts();\n  };\n\n  render() {\n    const { posts } = this.props;\n    return (\n      <>\n        {posts && posts.length > 0 ? (\n          <div>\n            <div className='post-wrapper'>\n              {posts.map((post: any, index: any) => (\n                <div className='post' key={index}>\n                  <div className='user-img'>\n                    <img src={post.imgUrl} alt='' />\n                  </div>\n                  <div className='post-data'>\n                    <div className='user-time'>\n                      <Link to={`/profile/${post.userId}`}>\n                        <span className='post-writer'>{post.fullName}</span>\n                      </Link>\n                      <span className='post-date'>\n                        <TimeAgo\n                          date={`${post.createdAt.substring(0, 19)}-0200`}\n                        />\n                      </span>\n                    </div>\n                    {post.postType === 1 ? (\n                      <div className='post-body'>\n                        <img src={post.postBody} alt='' className='post-img' />\n                      </div>\n                    ) : (\n                      <div className='post-body'>\n                        <p>\n                          {post.postBody\n                            .split(' ')\n                            .splice(0, 30)\n                            .join(' ')}\n                          <span id={`dots${post.postId}`}></span>\n                          <span id={`more${post.postId}`} className='hide'>\n                            {post.postBody\n                              .split(' ')\n                              .splice(30)\n                              .join(' ')}\n                          </span>\n                        </p>\n                        {post.postBody.split(' ').length > 30 ? (\n                          <Button\n                            onClick={(event: React.MouseEvent<HTMLElement>) => {\n                              this.myFunction(\n                                (event.target as HTMLElement).id.substring(5)\n                              );\n                            }}\n                            id={`myBtn${post.postId}`}\n                          >\n                            Read more\n                          </Button>\n                        ) : null}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ) : (\n          <div>Nothing to show</div>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  posts: state.allPostsReducer.posts\n});\n\nconst mapDispatchToProps = {\n  getAllPosts\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\n","import React, { Component } from 'react';\nimport { Tag, Collapse, Icon } from 'antd';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { Link } from 'react-router-dom';\nimport { fas, faUserEdit } from '@fortawesome/free-solid-svg-icons';\n\nimport axios from 'axios';\nimport {\n  faFacebookF,\n  faTwitter,\n  faLinkedin,\n  faGithub\n} from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './style.css';\n\nlibrary.add(fas, faFacebookF, faTwitter, faLinkedin, faGithub);\n\nexport class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      error: null,\n      authenticated: false,\n      loggedInUser: {}\n    };\n  }\n\n  getData = props => {\n    const { id } = props.match.params;\n    axios(`https://rbk-space.herokuapp.com/user/${id}`).then(result => {\n      this.setState({\n        user: result.data[0]\n      });\n    });\n  };\n  componentDidMount() {\n    fetch('https://rbk-space.herokuapp.com/auth/login/success', {\n      method: 'GET',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true\n      }\n    })\n      .then(response => {\n        if (response.status === 200) return response.json();\n        throw new Error('failed to authenticate user');\n      })\n      .then(responseJson => {\n        // console.log(responseJson.user);\n        this.setState({\n          authenticated: true,\n          loggedInUser: responseJson.user\n        });\n      })\n      .catch(error => {\n        this.setState({\n          authenticated: false,\n          error: 'Failed to authenticate user'\n        });\n      });\n    this.getData(this.props);\n  }\n  componentWillReceiveProps(props) {\n    this.getData(props);\n  }\n\n  render() {\n    const { Panel } = Collapse;\n    const customPanelStyle = {\n      background: '#f7f7f7',\n      borderRadius: 4,\n      marginBottom: 12,\n      border: 0,\n      overflow: 'hidden'\n    };\n\n    return (\n      <div className='user-profile'>\n        {!this.state.user.hasOwnProperty('userId') ? (\n          <div>\n            <img\n              src='https://flevix.com/wp-content/uploads/2019/07/Ring-Preloader.gif'\n              alt=''\n            />\n          </div>\n        ) : (\n          <>\n            <div className='general-wrapper'>\n              <h1 id='user-profile-heading'>User Profile</h1>\n              <div className='general'>\n                <div className='editt'>\n                  <span className='section-id'>General</span>\n                  {this.state.loggedInUser[0] &&\n                  this.state.loggedInUser[0].userId ===\n                    this.state.user.userId ? (\n                    <Link to={`/editProfile/${this.state.user.userId}`}>\n                      <FontAwesomeIcon\n                        icon={faUserEdit}\n                        color='##1890ff'\n                        size='lg'\n                      />\n                      <span className='edit-profile-text'>Edit Profile</span>\n                    </Link>\n                  ) : null}\n                </div>\n\n                <div className='general-border'>\n                  <div className='img-social-wrapper'>\n                    <div className='user-img'>\n                      <img src={this.state.user.image} alt='' />\n                    </div>\n                    <ul className='social-links'>\n                      {this.state.user.gh ? (\n                        <li className='social-item'>\n                          <a\n                            href={this.state.user.gh}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                          >\n                            <FontAwesomeIcon icon={faGithub} color='#211F1F' />\n                          </a>\n                        </li>\n                      ) : null}\n                      {this.state.user.fb ? (\n                        <li className='social-item'>\n                          <a\n                            href={this.state.user.fb}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                          >\n                            <FontAwesomeIcon\n                              icon={faFacebookF}\n                              color='#3b5998'\n                            />\n                          </a>\n                        </li>\n                      ) : null}\n\n                      {this.state.user.li ? (\n                        <li className='social-item'>\n                          <a\n                            href={this.state.user.li}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                          >\n                            <FontAwesomeIcon\n                              icon={faLinkedin}\n                              color='#0e76a8'\n                            />\n                          </a>\n                        </li>\n                      ) : null}\n\n                      {this.state.user.tw ? (\n                        <li className='social-item'>\n                          <a\n                            href={this.state.user.tw}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                          >\n                            <FontAwesomeIcon icon={faTwitter} color='#1da1f2' />\n                          </a>\n                        </li>\n                      ) : null}\n                    </ul>\n                  </div>\n                  <div className='general-info'>\n                    <p>\n                      Hello! My name is {this.state.user.fullName}{' '}\n                      {this.state.user.cohort\n                        ? `& I'm\n                      from ${this.state.user.cohort}`\n                        : null}\n                    </p>\n                    <p>\n                      {' '}\n                      {this.state.user.empStat\n                        ? `Employment status: ${this.state.user.empStat}`\n                        : null}{' '}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='bio-wrapper'>\n              <span className='section-id'>Bio</span>\n\n              <div className='bio-info'>\n                <p className='bio-content'>{this.state.user.bio}</p>\n                <div className='skills'>\n                  <span className='skills-id'>Skills</span>\n                  {/* map skills array */}\n                  <div className='skills-tags'>\n                    {this.state.user.skills.map((skill, index) => (\n                      <Tag key={index}>{skill.skillName}</Tag>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='portfolio-wrapper'>\n              <span className='section-id'>Portfolio</span>\n              <div className='portfolio-info'>\n                <Collapse\n                  bordered={false}\n                  defaultActiveKey={['1']}\n                  expandIcon={({ isActive }) => (\n                    <Icon type='caret-right' rotate={isActive ? 90 : 0} />\n                  )}\n                >\n                  {/* map projects array */}\n                  {this.state.user.projects.map((project, index) => (\n                    <Panel\n                      header={project.projectTitle}\n                      key={index + 1}\n                      style={customPanelStyle}\n                      className='project-item'\n                    >\n                      <div className='panel-content-wrapper'>\n                        <p className='project-decription'>\n                          {project.projectDesc}\n                        </p>\n                        <span>\n                          <a\n                            href={`http://${project.projectLink}`}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                          >\n                            Project Link\n                          </a>\n                        </span>\n                      </div>\n                    </Panel>\n                  ))}\n                </Collapse>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\nexport default Profile;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nexport class SearchPeople extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      peopleSearchResult: []\n    };\n  }\n\n  getData = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const query = urlParams.get('query');\n    var that = this;\n    axios(`https://rbk-space.herokuapp.com/users/?query=${query}`).then(\n      result => {\n        that.setState({\n          peopleSearchResult: result.data\n        });\n      }\n    );\n  };\n  componentDidMount() {\n    this.getData(this.props);\n  }\n  componentWillReceiveProps(props) {\n    this.getData(props);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.peopleSearchResult.length === 0 ? (\n          <div>\n            <h1>\n              <img\n                src='https://cdn.dribbble.com/users/1512427/screenshots/6201637/02.png'\n                alt=''\n              />\n            </h1>\n          </div>\n        ) : (\n          <div className='general-wrapper'>\n            <h1 id='user-profile-heading'>Users Result</h1>\n            {this.state.peopleSearchResult.map((user, index) => (\n              <>\n                <div className='general' key={index}>\n                  <div className='general-border'>\n                    <div className='img-social-wrapper'>\n                      <div className='user-img'>\n                        <img src={user.image} alt='' />\n                      </div>\n                    </div>\n                    <div className='general-info'>\n                      <p>\n                        Hello! My name is {user.fullName}{' '}\n                        {user.cohort\n                          ? `& I'm\n                      from ${user.cohort}`\n                          : null}\n                      </p>\n                      <p>\n                        {' '}\n                        {user.empStat\n                          ? `Employment status: ${user.empStat}`\n                          : null}{' '}\n                      </p>\n\n                      <Link to={`/profile/${user.userId}`}>\n                        <span className='search-profile-link'>\n                          Profile Link\n                        </span>\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SearchPeople;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport TimeAgo from 'react-timeago';\nimport { Button } from 'antd';\n\nexport class SearchPeople extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postsSearchResult: []\n    };\n  }\n\n  getData = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const query = urlParams.get('query');\n    var that = this;\n    axios(`https://rbk-space.herokuapp.com/posts/?query=${query}`).then(\n      result => {\n        that.setState({\n          postsSearchResult: result.data\n        });\n      }\n    );\n  };\n  componentDidMount() {\n    this.getData(this.props);\n  }\n  componentWillReceiveProps(props) {\n    this.getData(props);\n  }\n  myFunction(e) {\n    let dots = document.getElementById('dots' + e);\n    let moreText = document.getElementById('more' + e);\n    let btnText = document.getElementById('myBtn' + e);\n\n    if (dots.style.display === 'none') {\n      dots.style.display = 'inline';\n      btnText.innerHTML = 'Read more';\n      moreText.style.display = 'none';\n    } else {\n      dots.style.display = 'none';\n      btnText.innerHTML = 'Read less';\n      moreText.style.display = 'inline';\n    }\n  }\n\n  render() {\n    console.log(this.state.postsSearchResult);\n    return (\n      <div>\n        {this.state.postsSearchResult.length === 0 ? (\n          <div>\n            <h1>\n              {' '}\n              <img\n                src='https://cdn.dribbble.com/users/1512427/screenshots/6201637/02.png'\n                alt=''\n              />\n            </h1>\n          </div>\n        ) : (\n          <div className='post-wrapper'>\n            <h1 id='user-profile-heading'>Posts Result</h1>\n            {this.state.postsSearchResult.map((post, index) => (\n              <>\n                <div className='post' key={index}>\n                  <div className='user-img'>\n                    <img src={post.imgUrl} alt='' />\n                  </div>\n                  <div className='post-data'>\n                    <div className='user-time'>\n                      <Link to={`/profile/${post.userId}`}>\n                        <span className='post-writer'>{post.fullName}</span>\n                      </Link>\n                      <span className='post-date'>\n                        <TimeAgo\n                          date={`${post.createdAt.substring(0, 19)}-0200`}\n                        />\n                      </span>\n                    </div>\n                    <div className='post-body'>\n                      <p>\n                        {post.postBody\n                          .split(' ')\n                          .splice(0, 30)\n                          .join(' ')}\n                        <span id={`dots${post.postId}`}>...</span>\n                        <span id={`more${post.postId}`} className='hide'>\n                          {post.postBody\n                            .split(' ')\n                            .splice(30)\n                            .join(' ')}\n                        </span>\n                      </p>\n                      {post.postBody.split(' ').length > 30 ? (\n                        <Button\n                          onClick={event => {\n                            this.myFunction(event.target.id.substring(5));\n                          }}\n                          id={`myBtn${post.postId}`}\n                        >\n                          Read more\n                        </Button>\n                      ) : null}\n                    </div>\n                  </div>\n                </div>\n              </>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SearchPeople;\n","import React, { Component } from 'react';\nimport {\n  Form,\n  Input,\n  Tooltip,\n  Avatar,\n  Icon,\n  Select,\n  Button,\n  message\n} from 'antd';\nimport axios from 'axios';\nconst { Option } = Select;\nconst key = 'updatable';\n\nexport class Tab1 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n      user: null,\n      cohorts: null,\n      cohortNo: null,\n      skills: null,\n      empStatus: null,\n      skillId: []\n    };\n  }\n  getData = props => {\n    console.log(props);\n    const id = props.id;\n    axios(`https://rbk-space.herokuapp.com/cohorts`).then(result => {\n      console.log(result.data[0]);\n      this.setState({\n        cohorts: result.data[0]\n      });\n    });\n\n    axios(`https://rbk-space.herokuapp.com/user/${id}`).then(result => {\n      console.log(result.data[0]);\n      this.setState({\n        user: result.data[0]\n      });\n    });\n\n    axios(`https://rbk-space.herokuapp.com/skills`).then(result => {\n      console.log(result.data[0]);\n      this.setState({\n        skills: result.data[0]\n      });\n    });\n\n    axios(`https://rbk-space.herokuapp.com/empStatus`).then(result => {\n      console.log(result.data[0]);\n      this.setState({\n        empStatus: result.data[0]\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.getData(this.props);\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    var that = this;\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.openMessage();\n        values.imgUrl = this.state.user.image;\n        values.userId = this.state.user.userId;\n        console.log('Received values of form: ', values);\n        axios\n          .post('https://rbk-space.herokuapp.com/user/edit/basic', values)\n          .then(function(response) {\n            console.log(that.state.skillId[that.state.skillId.length - 1]);\n            axios\n              .post('https://rbk-space.herokuapp.com/user/edit/skill', {\n                userId: that.state.user.userId,\n                skillId: that.state.skillId[that.state.skillId.length - 1]\n              })\n              .then(function(response) {\n                console.log(response);\n              })\n              .catch(function(error) {\n                console.log(error);\n              });\n            console.log(response);\n          })\n          .catch(function(error) {\n            console.log(error);\n          });\n      }\n    });\n    console.log(this.state.skillId);\n  };\n\n  handleCohortChange(value) {\n    console.log(`selected ${value}`);\n  }\n\n  handleSkillsChange(value) {\n    this.setState({\n      skillId: [...this.state.skillId, value]\n    });\n    console.log(this.state.skillId);\n  }\n  handleEmpStatusChange(value) {\n    console.log(`selected ${value}`);\n  }\n\n  openMessage() {\n    message.loading({ content: 'Updating...', key });\n    setTimeout(() => {\n      message.success({ content: 'Updated!', key, duration: 3 });\n    }, 1500);\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { TextArea } = Input;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n\n    return (\n      <>\n        {this.state.user ? (\n          <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n            <Form.Item\n              label={\n                <span>\n                  Full Name&nbsp;\n                  <Tooltip title='This will be used in the website'>\n                    <Icon type='question-circle-o' />\n                  </Tooltip>\n                </span>\n              }\n            >\n              {getFieldDecorator('fullName', {\n                initialValue: this.state.user.fullName,\n                rules: [\n                  {\n                    required: true,\n                    message: 'Please input your Full Name!',\n                    whitespace: true\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label={<span>Cohort&nbsp;</span>}>\n              {getFieldDecorator('cohortId', {\n                initialValue: this.state.user.cohort,\n                rules: [\n                  {\n                    required: true,\n                    message: 'Please input your cohort number!'\n                  }\n                ]\n              })(\n                <Select\n                  onChange={this.handleCohortChange.bind(this)}\n                  style={{ width: 180 }}\n                >\n                  {this.state.cohorts\n                    ? this.state.cohorts.map((cohort, index) => (\n                        <Option value={cohort.cohortId} key={index}>\n                          {cohort.cohortName}\n                        </Option>\n                      ))\n                    : null}\n                </Select>\n              )}\n            </Form.Item>\n            <Form.Item label={<span>Image&nbsp;</span>}>\n              {getFieldDecorator('imgUrl', {\n                rules: [\n                  {\n                    message: 'Please input your Full Name!',\n                    whitespace: true\n                  }\n                ]\n              })(\n                <>\n                  <Avatar\n                    src={this.state.user.image}\n                    shape='square'\n                    size={64}\n                  />\n                  <Button>Upload Image</Button>\n                </>\n              )}\n            </Form.Item>\n            <Form.Item label={<span>Bio&nbsp;</span>}>\n              {getFieldDecorator('bio', {\n                initialValue: this.state.user.bio,\n                rules: [\n                  {\n                    required: true,\n                    message: 'Please input your Bio!',\n                    whitespace: true\n                  }\n                ]\n              })(<TextArea placeholder='Write your Bio here!' />)}\n            </Form.Item>\n\n            <Form.Item label='Skills'>\n              {getFieldDecorator('skills', {\n                rules: [\n                  {\n                    message: 'Please input your skills!'\n                  }\n                ]\n              })(\n                <Select\n                  mode='tags'\n                  style={{ width: '100%' }}\n                  placeholder='select your skills'\n                  onChange={this.handleSkillsChange.bind(this)}\n                >\n                  {this.state.skills\n                    ? this.state.skills.map((skill, index) => (\n                        <Option value={skill.skillId + ''} key={index}>\n                          {skill.skillName}\n                        </Option>\n                      ))\n                    : null}\n                </Select>\n              )}\n            </Form.Item>\n            <Form.Item label={<span>Employment Status&nbsp;</span>}>\n              {getFieldDecorator('empStatus', {\n                initialValue: this.state.user.empStat,\n                rules: [\n                  {\n                    required: true,\n                    message: 'Please input your employment status !'\n                  }\n                ]\n              })(\n                <Select\n                  onChange={this.handleEmpStatusChange}\n                  style={{ width: 200 }}\n                >\n                  {this.state.empStatus\n                    ? this.state.empStatus.map((status, index) => (\n                        <Option value={status.empId} key={index}>\n                          {status.empStatus}\n                        </Option>\n                      ))\n                    : null}\n                </Select>\n              )}\n            </Form.Item>\n            <Form.Item {...tailFormItemLayout}>\n              <Button type='primary' htmlType='submit'>\n                Update\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : null}\n      </>\n    );\n  }\n}\n\nconst BasicInfoForm = Form.create({ name: 'basicInfo' })(Tab1);\nexport default BasicInfoForm;\n","import React, { Component } from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport axios from 'axios';\nconst key = 'updatable';\n\nexport class Tab2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n      user: null,\n      cohorts: null,\n      cohortNo: null,\n      skills: null,\n      empStatus: null,\n      skillId: []\n    };\n  }\n  getData = props => {\n    console.log(props);\n    const id = props.id;\n    axios(`https://rbk-space.herokuapp.com/user/${id}`).then(result => {\n      console.log(result.data[0]);\n      this.setState({\n        user: result.data[0]\n      });\n    });\n  };\n  componentDidMount() {\n    this.getData(this.props);\n  }\n\n  handleSubmitLinks = e => {\n    e.preventDefault();\n    var that = this;\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(values);\n        this.openMessage();\n        axios\n          .post('https://rbk-space.herokuapp.com/user/edit/contact', {\n            userId: that.state.user.userId,\n            facebook: values.facebook,\n            github: values.github,\n            twitter: values.twitter,\n            linkedin: values.linkedin\n          })\n          .then(function(response) {\n            console.log(response);\n          })\n          .catch(function(error) {\n            console.log(error);\n          });\n      }\n    });\n  };\n  openMessage() {\n    message.loading({ content: 'Updating...', key });\n    setTimeout(() => {\n      message.success({ content: 'Updated!', key, duration: 3 });\n    }, 1500);\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    return (\n      <>\n        {this.state.user ? (\n          <Form {...formItemLayout} onSubmit={this.handleSubmitLinks}>\n            <Form.Item label={<span>GitHub account&nbsp;</span>}>\n              {getFieldDecorator('github', {\n                initialValue: this.state.user.gh,\n                rules: [\n                  {\n                    required: true,\n                    message: 'Please input your GitHub!',\n                    whitespace: true\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label={<span>Facebook&nbsp;</span>}>\n              {getFieldDecorator('facebook', {\n                initialValue: this.state.user.fb,\n                rules: [\n                  {\n                    message: 'Please input your Facebook!',\n                    whitespace: true\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label={<span>LinkedIn&nbsp;</span>}>\n              {getFieldDecorator('linkedin', {\n                initialValue: this.state.user.li,\n                rules: [\n                  {\n                    message: 'Please input your LinkedIn!',\n                    whitespace: true\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label={<span>Twitter&nbsp;</span>}>\n              {getFieldDecorator('twitter', {\n                initialValue: this.state.user.tw,\n                rules: [\n                  {\n                    message: 'Please input your Twitter!',\n                    whitespace: true\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item {...tailFormItemLayout}>\n              <Button type='primary' htmlType='submit'>\n                Update\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : null}\n      </>\n    );\n  }\n}\n\nconst SocialLinks = Form.create({ name: 'basicInfo' })(Tab2);\nexport default SocialLinks;\n","import React, { Component } from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport axios from 'axios';\nconst { TextArea } = Input;\nconst key = 'updatable';\n\nexport class Tab3 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n      user: null,\n      cohorts: null,\n      cohortNo: null,\n      skills: null,\n      empStatus: null,\n      skillId: []\n    };\n  }\n  getData = props => {\n    console.log(props);\n    const id = props.id;\n    axios(`https://rbk-space.herokuapp.com/user/${id}`).then(result => {\n      console.log(result.data[0]);\n      this.setState({\n        user: result.data[0]\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.getData(this.props);\n  }\n  handleSubmitProjects = e => {\n    e.preventDefault();\n    var that = this;\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.openMessage();\n        console.log(values);\n        axios\n          .post('https://rbk-space.herokuapp.com/user/edit/portfolio', {\n            userId: that.state.user.userId,\n            title: values.projectTitle,\n            description: values.projectDesc,\n            link: values.projectLink\n          })\n          .then(function(response) {\n            console.log(response);\n          })\n          .catch(function(error) {\n            console.log(error);\n          });\n      }\n    });\n  };\n  openMessage() {\n    message.loading({ content: 'Adding project...', key });\n    setTimeout(() => {\n      message.success({ content: 'project added!', key, duration: 3 });\n    }, 1500);\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n\n    return (\n      <>\n        {this.state.user ? (\n          <Form {...formItemLayout} onSubmit={this.handleSubmitProjects}>\n            <Form.Item label={<span>projectTitle&nbsp;</span>}>\n              {getFieldDecorator('projectTitle', {\n                rules: [\n                  {\n                    required: true,\n                    message: 'Please input your projectTitle!',\n                    whitespace: true\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label={<span>projectDesc&nbsp;</span>}>\n              {getFieldDecorator('projectDesc', {\n                rules: [\n                  {\n                    required: true,\n                    message: 'Please input your projectDesc!',\n                    whitespace: true\n                  }\n                ]\n              })(<TextArea rows={5} />)}\n            </Form.Item>\n            <Form.Item label={<span>projectLink&nbsp;</span>}>\n              {getFieldDecorator('projectLink', {\n                rules: [\n                  {\n                    required: true,\n                    message: 'Please input your projectLink!',\n                    whitespace: true\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n\n            <Form.Item {...tailFormItemLayout}>\n              <Button type='primary' htmlType='submit'>\n                Add\n              </Button>\n              <Button\n                onClick={e => {\n                  this.props.form.resetFields();\n                }}\n                className='clear-btn'\n              >\n                Clear\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : null}\n      </>\n    );\n  }\n}\n\nconst Portfolio = Form.create({ name: 'basicInfo' })(Tab3);\nexport default Portfolio;\n","import React from 'react';\nimport './style.css';\nimport 'antd/dist/antd.css';\nimport { Form, Tabs } from 'antd';\nimport axios from 'axios';\nimport BasicInfoForm from './Tab1';\nimport SocialLinks from './Tab2';\nimport Portfolio from './Tab3';\nconst { TabPane } = Tabs;\n\nclass EditProfile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n      user: null,\n      cohorts: null,\n      cohortNo: null,\n      skills: null,\n      empStatus: null,\n      skillId: []\n    };\n  }\n\n  getData = props => {\n    const { id } = props.match.params;\n    console.log(id);\n    this.setState({ id: id });\n    axios(`https://rbk-space.herokuapp.com/user/${id}`).then(result => {\n      console.log(result.data[0]);\n      this.setState({\n        user: result.data[0]\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.getData(this.props);\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.user ? (\n          <div>\n            <div className='edit-profile'>\n              <h1 id='edit-profile-heading'>Edit Profile</h1>\n              <div className='edit-tabs'>\n                <Tabs defaultActiveKey='1' onChange={this.callback}>\n                  <TabPane tab='Basic Info' key='1'>\n                    <BasicInfoForm id={this.state.id} />\n                  </TabPane>\n                  <TabPane tab='Social Links' key='2'>\n                    <SocialLinks id={this.state.id} />\n                  </TabPane>\n                  <TabPane tab='Portfolio' key='3'>\n                    <Portfolio id={this.state.id} />\n                  </TabPane>\n                </Tabs>\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </>\n    );\n  }\n}\n\nconst EditProfileForm = Form.create({ name: 'register' })(EditProfile);\nexport default EditProfileForm;\n","import { GET_ALL_POSTS, ADD_POST } from './../actions/types';\n\nconst initialState = {\n  posts: []\n};\n\nexport function allPostsReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_ALL_POSTS:\n      return {\n        ...state,\n        posts: action.payload\n      };\n    case ADD_POST:\n      if (action.error) {\n        return [];\n      } else {\n        return {\n          ...state,\n          posts: [...state.posts, action.payload]\n        };\n      }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { allPostsReducer } from './posts';\n\nexport default combineReducers({\n  allPostsReducer\n});\n","import React, { Component } from 'react';\nimport { GithubLoginButton } from 'react-social-login-buttons';\n\nimport './style.css';\n\nexport default class Header extends Component {\n  render() {\n    const { authenticated } = this.props;\n    return (\n      <div className='loginPage'>\n        <div className='opacity'>\n          <div className='container'>\n            <h1>Welcome to RBK-Space</h1>\n            <p className='description'>\n              - Here you can share your skills, RBK memories and post/find jobs\n              with RBK family -\n            </p>\n            <div className='instructions-wrapper'>\n              <span id='first-time'>First Time Login:</span>\n              <ul className='instructions'>\n                <li>\n                  Please make sure that your GitHub account has your Name and\n                  your Email - you can do this from your GitHub profile => Edit\n                  profile.\n                </li>\n                <li>\n                  Please make sure that your RBK organization membership on\n                  GitHub is public.\n                  <a\n                    href='https://github.com/orgs/rbk-org/people'\n                    target='_blank'\n                    rel='noopener noreferrer'\n                  >\n                    {' '}\n                    Click here{' '}\n                  </a>\n                </li>\n              </ul>\n            </div>\n            <ul className='menu'>\n              {authenticated ? (\n                <li onClick={this._handleLogoutClick}>Logout</li>\n              ) : (\n                <li>\n                  <GithubLoginButton\n                    className='github-btn'\n                    onClick={this._handleSignInClick}\n                  />\n                </li>\n              )}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  _handleSignInClick = () => {\n    // Authenticate using via passport api in the backend\n    // Open Twitter login page\n    // Upon successful login, a cookie session will be stored in the client\n    window.open('https://rbk-space.herokuapp.com/auth/github', '_self');\n  };\n\n  _handleLogoutClick = () => {\n    // Logout using Twitter passport api\n    // Set authenticated state to false in the HomePage\n    window.open('https://rbk-space.herokuapp.com/auth/logout', '_self');\n    this.props.handleNotAuthenticated();\n  };\n}\n","import Header from './Header';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nexport default class HomePage extends Component {\n  static propTypes = {\n    user: PropTypes.shape({\n      name: PropTypes.string,\n      profileImageUrl: PropTypes.string,\n      twitterId: PropTypes.string,\n      screenName: PropTypes.string,\n      _id: PropTypes.string\n    })\n  };\n\n  state = {\n    user: {},\n    error: null,\n    authenticated: false\n  };\n\n  componentDidMount() {\n    // Fetch does not send cookies. So you should add credentials: 'include'\n    fetch('https://rbk-space.herokuapp.com/auth/login/success', {\n      method: 'GET',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true\n      }\n    })\n      .then(response => {\n        if (response.status === 200) return response.json();\n        throw new Error('failed to authenticate user');\n      })\n      .then(responseJson => {\n        this.setState({\n          authenticated: true,\n          user: responseJson.user\n        });\n      })\n      .catch(error => {\n        this.setState({\n          authenticated: false,\n          error: 'Failed to authenticate user'\n        });\n      });\n  }\n\n  render() {\n    const { authenticated } = this.state;\n\n    return (\n      <div>\n        <Header\n          authenticated={authenticated}\n          handleNotAuthenticated={this._handleNotAuthenticated}\n        />\n      </div>\n    );\n  }\n\n  _handleNotAuthenticated = () => {\n    this.setState({ authenticated: false });\n  };\n}\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\n// import Sidebar from './components/Sidebar/Sidebar';\nimport AddPost from './components/AddPost/AddPost';\nimport Post from './components/Post/Post';\nimport Profile from './components/userProfile/Profile';\nimport SearchPeople from './components/Search/SearchPeople';\nimport SearchPosts from './components/Search/SearchPosts';\nimport EditProfileForm from './components/EditProfile/EditProfile';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport combineReducers from './reducers/index';\nimport thunk from 'redux-thunk';\nimport Homepage from './components/HomePage/Homepage';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nexport const store = createStore(combineReducers, applyMiddleware(thunk));\nclass App extends React.Component {\n  state = {\n    user: {},\n    error: null,\n    authenticated: false\n  };\n  componentDidMount() {\n    // Fetch does not send cookies. So you should add credentials: 'include'\n    fetch('https://rbk-space.herokuapp.com/auth/login/success', {\n      method: 'GET',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true\n      }\n    })\n      .then(response => {\n        if (response.status === 200) return response.json();\n        throw new Error('failed to authenticate user');\n      })\n      .then(responseJson => {\n        // console.log(responseJson.user);\n        this.setState({\n          authenticated: true,\n          user: responseJson.user\n        });\n      })\n      .catch(error => {\n        this.setState({\n          authenticated: false,\n          error: 'Failed to authenticate user'\n        });\n      });\n  }\n\n  render() {\n    const { authenticated } = this.state;\n    return (\n      <>\n        {!authenticated ? (\n          <Homepage />\n        ) : (\n          <>\n            <Provider store={store}>\n              <Router>\n                <Navbar />\n                {/* <Sidebar /> */}\n                <div className='container'>\n                  <Switch className='App'>\n                    <Route path='/home'>\n                      <AddPost />\n                      <Post />\n                    </Route>\n                    <Route\n                      exact\n                      path='/profile/:id'\n                      component={Profile}\n                    ></Route>\n                    <Route\n                      exact\n                      path='/search/users/'\n                      component={SearchPeople}\n                    ></Route>\n                    <Route\n                      exact\n                      path='/search/posts/'\n                      component={SearchPosts}\n                    ></Route>\n                    {/* <Router\n                      exact\n                      path='/editProfile/:id'\n                      component={EditProfile}\n                    ></Router> */}\n                    <Route\n                      path='/editProfile/:id'\n                      component={EditProfileForm}\n                    />\n                  </Switch>\n                </div>\n              </Router>\n            </Provider>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}